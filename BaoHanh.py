# Form implementation generated from reading ui file 'BaoHanh.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
from PyQt6.uic import loadUi
import sys
import MySQLdb as mdb


class Ui_QuanLyBaoHanh(object):
    def setupUi(self, QuanLyBaoHanh):
        QuanLyBaoHanh.setObjectName("QuanLyBaoHanh")
        QuanLyBaoHanh.resize(1232, 878)
        self.centralwidget = QtWidgets.QWidget(parent=QuanLyBaoHanh)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(340, 0, 471, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 130, 661, 671))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(132)
        self.groupBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(710, 110, 501, 691))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.txtGhiChu = QtWidgets.QLineEdit(parent=self.groupBox)
        self.txtGhiChu.setGeometry(QtCore.QRect(170, 330, 281, 71))
        self.txtGhiChu.setObjectName("txtGhiChu")
        self.txtMaBH = QtWidgets.QLineEdit(parent=self.groupBox)
        self.txtMaBH.setGeometry(QtCore.QRect(170, 90, 281, 41))
        self.txtMaBH.setObjectName("txtMaBH")
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(30, 90, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(30, 150, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.txtMaNV = QtWidgets.QLineEdit(parent=self.groupBox)
        self.txtMaNV.setGeometry(QtCore.QRect(170, 270, 281, 41))
        self.txtMaNV.setObjectName("txtMaNV")
        self.label_4 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(30, 200, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_6 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(30, 340, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.txtMaHDX = QtWidgets.QLineEdit(parent=self.groupBox)
        self.txtMaHDX.setGeometry(QtCore.QRect(170, 200, 281, 51))
        self.txtMaHDX.setObjectName("txtMaHDX")
        self.txtMaSP = QtWidgets.QLineEdit(parent=self.groupBox)
        self.txtMaSP.setGeometry(QtCore.QRect(170, 140, 281, 41))
        self.txtMaSP.setObjectName("txtMaSP")
        self.label_5 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(30, 270, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.btnThem = QtWidgets.QPushButton(parent=self.groupBox)
        self.btnThem.setGeometry(QtCore.QRect(40, 460, 121, 51))
        self.btnThem.setObjectName("btnThem")
        self.btnSua = QtWidgets.QPushButton(parent=self.groupBox)
        self.btnSua.setGeometry(QtCore.QRect(200, 460, 111, 51))
        self.btnSua.setObjectName("btnSua")
        self.btnXoa = QtWidgets.QPushButton(parent=self.groupBox)
        self.btnXoa.setGeometry(QtCore.QRect(350, 460, 101, 51))
        self.btnXoa.setObjectName("btnXoa")
        self.pushButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(190, 580, 141, 51))
        self.pushButton.setObjectName("pushButton")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(180, 90, 481, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        QuanLyBaoHanh.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=QuanLyBaoHanh)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1232, 26))
        self.menubar.setObjectName("menubar")
        QuanLyBaoHanh.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=QuanLyBaoHanh)
        self.statusbar.setObjectName("statusbar")
        QuanLyBaoHanh.setStatusBar(self.statusbar)

        self.retranslateUi(QuanLyBaoHanh)
        QtCore.QMetaObject.connectSlotsByName(QuanLyBaoHanh)

    def retranslateUi(self, QuanLyBaoHanh):
        _translate = QtCore.QCoreApplication.translate
        QuanLyBaoHanh.setWindowTitle(_translate("QuanLyBaoHanh", "MainWindow"))
        self.label.setText(_translate("QuanLyBaoHanh", "QUẢN LÝ BẢO HÀNH "))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("QuanLyBaoHanh", "Mã BH"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("QuanLyBaoHanh", "Mã SP"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("QuanLyBaoHanh", "Mã HD Xuất"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("QuanLyBaoHanh", "Mã NV"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("QuanLyBaoHanh", "Ghi Chú"))
        self.groupBox.setTitle(_translate("QuanLyBaoHanh", "Chức Năng"))
        self.label_2.setText(_translate("QuanLyBaoHanh", "Mã bảo hành"))
        self.label_3.setText(_translate("QuanLyBaoHanh", "Mã Sản phẩm"))
        self.label_4.setText(_translate("QuanLyBaoHanh", "Mã HD Xuất"))
        self.label_6.setText(_translate("QuanLyBaoHanh", "Ghi Chú"))
        self.label_5.setText(_translate("QuanLyBaoHanh", "Mã NV"))
        self.btnThem.setText(_translate("QuanLyBaoHanh", "Thêm "))
        self.btnSua.setText(_translate("QuanLyBaoHanh", "Sửa"))
        self.btnXoa.setText(_translate("QuanLyBaoHanh", "Xóa"))
        self.pushButton.setText(_translate("QuanLyBaoHanh", "Thoát"))
        self.label_7.setText(_translate("QuanLyBaoHanh", "Danh Sách Bảo Hành"))
class Baohanh(QMainWindow, Ui_QuanLyBaoHanh):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        # xử lý sk nút thoát
        self.pushButton.clicked.connect(self.close_window)
        # gọi hàm xử hiện dự liệu từ widget lên các text
        self.tableWidget.cellClicked.connect(self.show_selected_data)
        # gọi hàm load dữ liệu 
        self.loaddata()
        #xử lý nút thêm 
        self.btnThem.clicked.connect(self.themBH)
        # xử lý  nút sửa 
        self.btnSua.clicked.connect(self.suaBH)
        # xử lý nút xóa 
        self.btnXoa.clicked.connect(self.xoaBH)

    # code sử lý nút thoát 
    def close_window(self):
            self.close()   
# code sử lý load data lên trang DSBaoHanh
    def loaddata(self):
        db= mdb.connect('localhost','root','','kinhdoanhmaytinh')
        query = db.cursor()
        query.execute("SELECT * FROM tblbaohanh")
        results = query.fetchall()
        #self.tableWidget.setRowCount(len(results))
        self.tableWidget.setRowCount(len(results))
        tablerow =0
        for row in results: 
           self.tableWidget.setItem(tablerow, 0, QTableWidgetItem(str(row[0])))
           self.tableWidget.setItem(tablerow, 1, QTableWidgetItem(str(row[1])))
           self.tableWidget.setItem(tablerow, 2, QTableWidgetItem(str(row[2])))
           self.tableWidget.setItem(tablerow, 3, QTableWidgetItem(str(row[3])))
           self.tableWidget.setItem(tablerow, 4, QTableWidgetItem(str(row[4])))
           #self.WidgetBaoHanh.setItem(tablerow, 5, QTableWidgetItem(str(row[5])))

           tablerow += 1
    def show_selected_data(self, row, column):
        
        # Hiển thị dữ liệu từ hàng được chọn lên các QLineEdit
        self.txtMaBH.setText(self.tableWidget.item(row, 0).text())
        self.txtMaSP.setText(self.tableWidget.item(row, 1).text())
        self.txtMaHDX.setText(self.tableWidget.item(row, 2).text())
        self.txtMaNV.setText(self.tableWidget.item(row, 3).text())
        self.txtGhiChu.setText(self.tableWidget.item(row, 4).text())
    def themBH (self):
        maBH = self.txtMaBH.text()
        maSP = self.txtMaSP.text()
        maHDX = self.txtMaHDX.text()
        maNV = self.txtMaNV.text()
        ghichu = self.txtGhiChu.text()
        if not all([maBH, maSP, maHDX, maNV, ghichu]):
            QMessageBox.warning(self, "Lỗi", "Vui lòng nhập đầy đủ thông tin!")
            return
        try:
            # Kết nối đến cơ sở dữ liệu
            db = mdb.connect('localhost', 'root', '', 'kinhdoanhmaytinh')
            query = db.cursor()
            # Thực thi câu lệnh SQL để thêm dữ liệu vào cơ sở dữ liệu
            query.callproc('InsertInto_tblbaohanh', (maBH, maSP, maHDX, maNV, ghichu))
    
            db.commit()

            # Thông báo thành công và làm mới dữ liệu trên giao diện
            QMessageBox.information(self, "Thành công", "Thêm dữ liệu thành công!")
            self.loaddata()  # Làm mới dữ liệu sau khi thêm
        except Exception as e:
            # Trong trường hợp có lỗi, rollback và hiển thị thông báo lỗi
            db.rollback()
            QMessageBox.warning(self, "Lỗi", f"Đã xảy ra lỗi: {str(e)}")
        finally:
            # Đóng kết nối với cơ sở dữ liệu
            db.close()
    def suaBH (self):
        maBH = self.txtMaBH.text()
        maSP = self.txtMaSP.text()
        maHDX = self.txtMaHDX.text()
        maNV = self.txtMaNV.text()
        ghichu = self.txtGhiChu.text()
        if not all([maBH, maSP, maHDX, maNV, ghichu]):
            QMessageBox.warning(self, "Lỗi", "Vui lòng nhập đầy đủ thông tin!")
            return
        try:
            # Kết nối đến cơ sở dữ liệu
            db = mdb.connect('localhost', 'root', '', 'kinhdoanhmaytinh')
            query = db.cursor()
            # Thực thi câu lệnh SQL để thêm dữ liệu vào cơ sở dữ liệu
            query.callproc('Update_tblbaohanh', (maBH, maSP, maHDX, maNV, ghichu))
    
            db.commit()

            # Thông báo thành công và làm mới dữ liệu trên giao diện
            QMessageBox.information(self, "Thành công", "Sửa thành công !")
            self.loaddata()  # Làm mới dữ liệu sau khi thêm
        except Exception as e:
            # Trong trường hợp có lỗi, rollback và hiển thị thông báo lỗi
            db.rollback()
            QMessageBox.warning(self, "Lỗi", f"Đã xảy ra lỗi: {str(e)}")
        finally:
            # Đóng kết nối với cơ sở dữ liệu
            db.close()
    
    
    def xoaBH(self):
        maBH = self.txtMaBH.text()
        # maSP = self.txtMaSP.text()
        # maHDX = self.txtMaHDX.text()
        # maNV = self.txtMaNV.text()
        # ghichu = self.txtGhiChu.text()
        try:
            # Kết nối đến cơ sở dữ liệu
            db = mdb.connect('localhost', 'root', '', 'kinhdoanhmaytinh')
            query = db.cursor()
            # Thực thi câu lệnh SQL để thêm dữ liệu vào cơ sở dữ liệu
            query.callproc('DeleteFrom_tblbaohanh',(maBH,))
            db.commit()

            # Thông báo thành công và làm mới dữ liệu trên giao diện
            QMessageBox.information(self, "Thành công", "Xóa thành công !")
            self.loaddata()  # Làm mới dữ liệu sau khi thêm
        except Exception as e:
            # Trong trường hợp có lỗi, rollback và hiển thị thông báo lỗi
            db.rollback()
            QMessageBox.warning(self, "Lỗi", f"Đã xảy ra lỗi: {str(e)}")
        finally:
            # Đóng kết nối với cơ sở dữ liệu
            db.close()
    

# app = QApplication (sys.argv) 
# Widget = QtWidgets.QStackedWidget()
# BaoHanh_show = Baohanh() 
# Widget.addWidget(BaoHanh_show)  
# Widget.setFixedHeight(800) 
# Widget.setFixedWidth(600) 
# Widget.show()
# app.exec()